
# -----------------------------------------------------------------------
#                     ACCOUNT ADMINISTRATION CONTROLLER
# -----------------------------------------------------------------------
mongo_accountAdministration_login:
    path:       accountadministration/login
    defaults:   { _controller: MongoBundle:AccountAdministration:login }
    methods:    [POST]

mongo_accountAdministration_logout:
    path:       accountadministration/logout/{token}
    defaults:   { _controller:MongoBundle:AccountAdministration:logout }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:    [GET]

mongo_accountAdministration_register:
    path:       accountadministration/register
    defaults:   { _controller: MongoBundle:AccountAdministration:register }
    methods:    [POST]

# mongo_accountAdministration_clientLogin:
#     path:       accountadministration/login/{token}
#     defaults:   { _controller: MongoBundle:AccountAdministration:clientLogin }
#     methods:    [GET]




# -----------------------------------------------------------------------
#                           BUGTRACKER CONTROLLER
# -----------------------------------------------------------------------
mongo_bugtracker_getTicket:
    path:       /bugtracker/getticket/{token}/{id}
    defaults:   { _controller: MongoBundle:Bugtracker:getTicket }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_postTicket:
    path:       /bugtracker/postticket
    defaults:   { _controller: MongoBundle:Bugtracker:postTicket }
    methods:  [POST]

mongo_bugtracker_editTicket:
    path:       /bugtracker/editticket
    defaults:   { _controller: MongoBundle:Bugtracker:editTicket }
    methods:  [PUT]

mongo_bugtracker_getComments:
    path:       /bugtracker/getcomments/{token}/{id}/{ticketId}
    defaults:   { _controller: MongoBundle:Bugtracker:getComments }
    requirements:
        token:    "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_postComment:
    path:       /bugtracker/postcomment
    defaults:   { _controller: MongoBundle:Bugtracker:postComment }
    methods:  [POST]

mongo_bugtracker_editComment:
    path:       /bugtracker/editcomment
    defaults:   { _controller: MongoBundle:Bugtracker:editComment }
    methods:  [PUT]

mongo_bugtracker_setParticipants:
    path:       /bugtracker/setparticipants
    defaults:   { _controller: MongoBundle:Bugtracker:setParticipants }
    methods: [PUT]

mongo_bugtracker_closeTicket:
    path:       /bugtracker/closeticket/{token}/{id}
    defaults:   { _controller: MongoBundle:Bugtracker:closeTicket }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [DELETE]

mongo_bugtracker_getTickets:
    path:       /bugtracker/gettickets/{token}/{id}
    defaults:   { _controller: MongoBundle:Bugtracker:getTickets }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_getLastTickets:
    path:       /bugtracker/getlasttickets/{token}/{id}/{offset}/{limit}
    defaults:   { _controller: MongoBundle:Bugtracker:getLastTickets }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_getLastClosedTickets:
    path:       /bugtracker/getlastclosedtickets/{token}/{id}/{offset}/{limit}
    defaults:   { _controller: MongoBundle:Bugtracker:getLastClosedTickets }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_getTicketsByUser:
    path:       /bugtracker/getticketsbyuser/{token}/{id}/{userId}
    defaults:   { _controller: MongoBundle:Bugtracker:getTicketsByUser }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_getTicketsByState:
    path:       /bugtracker/getticketsbystate/{token}/{id}/{state}/{offset}/{limit}
    defaults:   { _controller: MongoBundle:Bugtracker:getTicketsByState }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_getStates:
    path:       /bugtracker/getstates/{token}
    defaults:   { _controller: MongoBundle:Bugtracker:getStates }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_tagCreation:
    path:       /bugtracker/tagcreation
    defaults:   { _controller: 'MongoBundle:Bugtracker:tagCreation' }
    methods: [POST]

mongo_bugtracker_tagUpdate:
    path:       /bugtracker/tagupdate
    defaults:   { _controller: 'MongoBundle:Bugtracker:tagUpdate' }
    methods: [PUT]

mongo_bugtracker_getTagInfos:
    path:       /bugtracker/taginformations/{token}/{tagId}
    defaults:   { _controller: 'MongoBundle:Bugtracker:getTagInfos' }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_bugtracker_deleteTag:
    path:       /bugtracker/deletetag/{token}/{tagId}
    defaults:   { _controller: 'MongoBundle:Bugtracker:deleteTag' }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [DELETE]

mongo_bugtracker_assignTag:
    path:       /bugtracker/assigntag
    defaults: { _controller: MongoBundle:Bugtracker:assignTag }
    methods: [PUT]

mongo_bugtracker_removeTag:
    path:       /bugtracker/removetag/{token}/{bugId}/{tagId}
    defaults:   { _controller: 'MongoBundle:Bugtracker:removeTag' }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [DELETE]

mongo_bugtracker_getProjectTags:
    path:       /bugtracker/getprojecttags/{token}/{projectId}
    defaults:   { _controller: 'MongoBundle:Bugtracker:getProjectTags' }
    requirements:
        token:      "[a-zA-Z0-9]+"
    methods: [GET]

mongo_bugtracker_getClosedTickets:
    path:       /bugtracker/getclosedtickets/{token}/{id}
    defaults:   { _controller: MongoBundle:Bugtracker:getClosedTickets }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [GET]

mongo_bugtracker_reopenTicket:
    path:       /bugtracker/reopenticket/{token}/{id}
    defaults:   { _controller: MongoBundle:Bugtracker:reopenTicket }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods:  [PUT]


# -----------------------------------------------------------------------
#                           CLOUD CONTROLLER
# -----------------------------------------------------------------------
mongo_cloud_streamOpenAction:
  path:     cloud/stream/{token}/{idProject}/{safePassword}
  defaults:   { _controller: MongoBundle:Cloud:openStream, safePassword: null}
  methods: [POST]

mongo_cloud_streamCloseAction:
  path:     cloud/stream/{token}/{projectId}/{streamId}
  defaults: { _controller: MongoBundle:Cloud:closeStream}
  methods: [DELETE]

mongo_cloud_sendFile:
  path:     cloud/file
  defaults:   { _controller: MongoBundle:Cloud:sendFile }
  methods: [PUT]

mongo_cloud_getList:
    path:       cloud/list/{token}/{idProject}/{path}/{password}
    defaults:   { _controller: MongoBundle:Cloud:getList,  password: null}
    methods: [GET]

mongo_cloud_getFile:
    path:       cloud/file/{cloudPath}/{token}/{idProject}/{passwordSafe}
    defaults:   { _controller: MongoBundle:Cloud:getFile, passwordSafe: null }
    methods: [GET]

mongo_cloud_getFile_secured:
    path:       cloud/filesecured/{cloudPath}/{token}/{idProject}/{password}/{passwordSafe}
    defaults:   { _controller: MongoBundle:Cloud:getFileSecured, passwordSafe: null }
    methods: [GET]

mongo_cloud_setSafePass:
    path:       cloud/safepass
    defaults:   { _controller: MongoBundle:Cloud:setSafePass }
    methods: [PUT]

mongo_cloud_delete:
    path:       cloud/file/{token}/{projectId}/{path}/{password}
    defaults:   { _controller: MongoBundle:Cloud:del, password: null}
    methods: [DELETE]

mongo_cloud_createDir:
    path:       cloud/createdir
    defaults:   { _controller: MongoBundle:Cloud:createDir }
    methods: [POST]

mongo_cloud_delete_secured:
    path:       cloud/filesecured/{token}/{projectId}/{path}/{password}/{safe_password}
    defaults:   { _controller: MongoBundle:Cloud:delSecured, safe_password: null}
    methods: [DELETE]

# mongo_cloud_createCloud: #TODO : Delete this route, it's a test route
#     path:       cloud/createcloud/{projectId}
#     defaults:   { _controller: MongoBundle:Cloud:createCloud }
#     methods: [GET]




# -----------------------------------------------------------------------
#                           DASHBOARD CONTROLLER
# -----------------------------------------------------------------------
mongo_dashboard_getTeamOccupation:
    path:       dashboard/getteamoccupation/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getTeamOccupation }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getNextMeetings:
    path:       dashboard/getnextmeetings/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getNextMeetings }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectsGlobalProgress:
    path:       dashboard/getprojectsglobalprogress/{token}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectsGlobalProgress }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectCreator:
    path:       dashboard/getprojectcreator/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectCreator }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectBasicInformations:
    path:       dashboard/getprojectbasicinformations/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectBasicInformations }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectTasks:
    path:       dashboard/getprojecttasks/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectTasks }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getUserBasicInformations:
    path:       dashboard/getuserbasicinformations/{token}
    defaults:   { _controller: MongoBundle:Dashboard:getUserBasicInformations }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectPersons:
    path:       dashboard/getprojectpersons/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectPersons }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getMeetingBasicInformations:
    path:       dashboard/getmeetingbasicinformations/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getMeetingBasicInformations }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectList:
    path:       dashboard/getprojectlist/{token}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectList }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getProjectTasksStatus:
    path:       dashboard/getprojecttasksstatus/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getProjectTasksStatus }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getNumberTimelineMessages:
    path:       dashboard/getnumbertimelinemessages/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getNumberTimelineMessages }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_dashboard_getNumberBugs:
    path:       dashboard/getnumberbugs/{token}/{id}
    defaults:   { _controller: MongoBundle:Dashboard:getNumberBugs }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]





# -----------------------------------------------------------------------
#                           EVENT CONTROLLER
# -----------------------------------------------------------------------
mongo_event_getTypes:
    path:       /event/gettypes/{token}
    defaults:   { _controller: MongoBundle:Event:getTypes }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_event_getEvent:
    path:       /event/getevent/{token}/{id}
    defaults:   { _controller: MongoBundle:Event:getEvent }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_event_setParticipants:
    path:       /event/setparticipants
    defaults:   { _controller: MongoBundle:Event:setParticipants }
    methods: [PUT]

mongo_event_postEvent:
    path:       /event/postevent
    defaults:   { _controller: MongoBundle:Event:postEvent }
    methods: [POST]

mongo_event_editEvent:
    path:       /event/editevent
    defaults:   { _controller: MongoBundle:Event:editEvent }
    methods: [PUT]

mongo_event_delEvent:
    path:       /event/delevent/{token}/{id}
    defaults:   { _controller: MongoBundle:Event:delEvent }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [DELETE]

# meeting_addAlert:
#     path:       /Meeting/addAlert/{id}
#     defaults:   { _controller: MongoBundle:Meeting:addAlert }
#     requirements:
#         id: \d+




# -----------------------------------------------------------------------
#                           GANTT CONTROLLER
# -----------------------------------------------------------------------
# mongo_gantt_addTask:
#     path:       /Gantt/addTask/{id}
#     defaults:   { _controller: MongoBundle:Gantt:addTask }
#     requirements:
#         id: \d+
#
# mongo_gantt_assignTask:
#     path:       /Gantt/assignTask/{id}
#     defaults:   { _controller: MongoBundle:Gantt:assignTask }
#     requirements:
#         id: \d+
#
# mongo_gantt_editTask:
#     path:       /Gantt/editTask/{id}
#     defaults:   { _controller: MongoBundle:Gantt:editTask }
#     requirements:
#         id: \d+
#
# mongo_gantt_delTask:
#     path:       /Gantt/delTask/{id}
#     defaults:   { _controller: MongoBundle:Gantt:delTask }
#     requirements:
#         id: \d+
#
# mongo_gantt_setTaskProperties:
#     path:       /Gantt/setTaskProperties/{id}
#     defaults:   { _controller: MongoBundle:Gantt:setTaskProperties }
#     requirements:
#         id: \d+




# -----------------------------------------------------------------------
#                        NOTIFICATION CONTROLLER
# -----------------------------------------------------------------------
mongo_notification_registerDevice:
    path:       /notification/registerdevice
    defaults:   { _controller: MongoBundle:Notification:registerDevice }
    methods: [POST]

mongo_notification_unregisterDevice:
    path:       /notification/unregisterdevice/{token}/{id}
    defaults:   { _controller: MongoBundle:Notification:unregisterDevice }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [DELETE]

mongo_notification_getUserDevices:
    path:       /notification/getuserdevices/{token}
    defaults:   { _controller: MongoBundle:Notification:getUserDevices }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [GET]

mongo_notification_getNotifications:
    path:		    /notification/getnotifications/{token}/{read}/{offset}/{limit}
    defaults:   { _controller: MongoBundle:Notification:getNotifications }
    requirements:
        token:	"[a-zA-Z0-9]+"
        read:   "[a-zA-Z0-9]+"
    methods: [GET]

mongo_notification_setNotificationToRead:
    path:       /notification/setnotificationtoread/{token}/{id}
    defaults:   { _controller: MongoBundle:Notification:setNotificationToRead }
    requirements:
        token:  "[a-zA-Z0-9]+"
    methods: [PUT]


# -----------------------------------------------------------------------
#                           PLANNING CONTROLLER
# -----------------------------------------------------------------------
mongo_planning_getDayPlanning:
    path:       /planning/getday/{token}/{date}
    defaults:   { _controller: MongoBundle:Planning:getDayPlanning }
    requirements:
        token:  "[a-zA-Z0-9]+"
        date:   \d+-\d+-\d+
    methods: [GET]

mongo_planning_getWeekPlanning:
    path:       /planning/getweek/{token}/{date}
    defaults:   { _controller: MongoBundle:Planning:getWeekPlanning}
    requirements:
        token:  "[a-zA-Z0-9]+"
        date:   \d+-\d+-\d+
    methods: [GET]

mongo_planning_getMonthPlanning:
    path:       /planning/getmonth/{token}/{date}
    defaults:   { _controller: MongoBundle:Planning:getMonthPlanning }
    requirements:
        token:  "[a-zA-Z0-9]+"
        date:   \d+-\d+-\d+
    methods: [GET]




# -----------------------------------------------------------------------
#                       PERSONAL SETTINGS CONTROLLER
# -----------------------------------------------------------------------
# personnalSettings_editPhoto:
#     path:       /PersonnalSettings/editPhoto/{id}
#     defaults:   { _controller: MongoBundle:PersonnalSettings:editPhoto }
#     requirements:
#         id: \d+
#
# personnalSettings_editPersonalInfos:
#     path:       /PersonnalSettings/editPersonalInfos/{id}
#     defaults:   { _controller: MongoBundle:PersonnalSettings:editPersonalInfos }
#     requirements:
#         id: \d+
#
# personnalSettings_changePassword:
#     path:       /PersonnalSettings/changePassword/{id}
#     defaults:   { _controller: MongoBundle:PersonnalSettings:changePassword }
#     requirements:
#         id: \d+
#
# personnalSettings_editPreferences:
#     path:       /PersonnalSettings/editPreferences/{id}
#     defaults:   { _controller: MongoBundle:PersonnalSettings:editPreferences }
#     requirements:
#         id: \d+
#
# personnalSettings_getRole:
#     path:       /PersonnalSettings/getRole/{id}
#     defaults:   { _controller: MongoBundle:PersonnalSettings:getRole }
#     requirements:
#         id: \d+




# -----------------------------------------------------------------------
#                           PROJECT CONTROLLER
# -----------------------------------------------------------------------
mongo_project_projectCreation:
    path:       projects/projectcreation
    defaults:   { _controller: MongoBundle:Project:projectCreation }
    methods: [POST]

mongo_project_updateInformations:
    path:       projects/updateinformations
    defaults:   { _controller: MongoBundle:Project:updateInformations }
    methods: [PUT]

mongo_project_getInformations:
    path:       projects/getinformations/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Project:getInformations }
    methods: [GET]

mongo_project_delProject:
    path:       projects/delproject/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Project:delProject }
    methods: [DELETE]

mongo_project_retrieveProject:
    path:       projects/retrieveproject/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Project:retrieveProject }
    methods: [GET]

mongo_project_generateCustomerAccess:
    path:       projects/generatecustomeraccess
    defaults:   { _controller: MongoBundle:Project:generateCustomerAccess }
    methods: [POST]

mongo_project_getCustomerAccessById:
    path:       projects/getcustomeraccessbyid/{token}/{id}
    defaults:   { _controller: MongoBundle:Project:getCustomerAccessById }
    methods: [GET]

mongo_project_getCustomerAccessByProject:
    path:       projects/getcustomeraccessbyproject/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Project:getCustomerAccessByProject }
    methods: [GET]

mongo_project_delCustomerAccess:
    path:       projects/delcustomeraccess/{token}/{projectId}/{customerAccessId}
    defaults:   { _controller: MongoBundle:Project:delCustomerAccess }
    methods: [DELETE]

mongo_project_addUserToProject:
    path:       projects/addusertoproject
    defaults:   { _controller: MongoBundle:Project:addUserToProject }
    methods: [POST]

mongo_project_removeUserToProject:
    path:       projects/removeusertoproject/{token}/{projectId}/{userId}
    defaults:   { _controller: MongoBundle:Project:removeUserToProject }
    methods: [DELETE]

mongo_project_getUserToProject:
    path:       projects/getusertoproject/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Project:getUserToProject }
    methods: [GET]

mongo_project_changeProjectColor:
    path:       projects/changeprojectcolor
    defaults:   { _controller: 'MongoBundle:Project:changeProjectColor' }
    methods: [PUT]

mongo_project_resetProjectColor:
    path:       projects/resetprojectcolor/{token}/{projectId}
    defaults:   { _controller: 'MongoBundle:Project:resetProjectColor' }
    methods: [DELETE]

mongo_project_getProjectLogo:
    path:       projects/getprojectlogo/{token}/{projectId}
    defaults:   { _controller: 'MongoBundle:Project:getProjectLogo' }
    methods: [GET]



# -----------------------------------------------------------------------
#                           ROLE CONTROLLER
# -----------------------------------------------------------------------
mongo_role_addProjectRoles:
    path:       roles/addprojectroles
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:addProjectRoles }
    methods: [POST]

mongo_role_delProjectRoles:
    path:       roles/delprojectroles/{token}/{id}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:delProjectRoles }
    methods: [DELETE]

mongo_role_putProjectRoles:
    path:       roles/putprojectroles
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:updateProjectRoles }
    methods: [PUT]

mongo_role_getProjectRoles:
    path:       roles/getprojectroles/{token}/{projectId}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getProjectRoles }
    methods: [GET]

mongo_role_assignPersonToRole:
    path:       roles/assignpersontorole
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:assignPersonToRole }
    methods: [POST]

mongo_role_updatePersonRole:
    path:       roles/putpersonrole
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:updatePersonRole }
    methods: [PUT]

mongo_role_getUserRoles:
    path:       roles/getuserroles/{token}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getUserRoles }
    methods: [GET]

mongo_role_delPersonRole:
    path:       roles/delpersonrole/{token}/{projectId}/{userId}/{roleId}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:delPersonRole }
    methods: [DELETE]

mongo_role_getRoleByProjectAndUser:
    path:       roles/getrolebyprojectanduser/{token}/{projectId}/{userId}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getRoleByProjectAndUser }
    methods: [GET]

mongo_role_getUsersForRole:
    path:       roles/getusersforrole/{token}/{roleId}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getUsersForRole }
    methods: [GET]

mongo_role_getUserConnectedRolesInformations:
    path:       roles/getuserrolesinformations/{token}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getUserConnectedRolesInfos }
    methods: [GET]

mongo_role_getUserRolesInformations:
    path:       roles/getuserrolesinformations/{token}/{userId}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getUserRolesInfos }
    methods: [GET]
mongo_role_getUserRoleForPart:
    path:       roles/getuserroleforpart/{token}/{userId}/{projectId}/{part}
    defaults:   { _controller: MongoBundle:RolesAndTokenVerification:getUserRoleForPart }



# -----------------------------------------------------------------------
#                          STATISTIC CONTROLLER
# -----------------------------------------------------------------------

mongo_stat_getAllStat:
    path:       statistics/getall/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Statistic:getAllStat }
    methods: [GET]

mongo_stat_getStat:
    path:       statistics/getstat/{token}/{projectId}/{statName}
    defaults:   { _controller: MongoBundle:Statistic:getStat }
    methods: [GET]

mongo_stat_weeklyUpdate:
    path:       statistics/update/weekly
    defaults:   { _controller: MongoBundle:Statistic:weeklyUpdate }
    methods: [GET]

mongo_stat_dailyUpdate:
    path:       statistics/update/daily
    defaults:   { _controller: MongoBundle:Statistic:dailyUpdate }
    methods: [GET]



# -----------------------------------------------------------------------
#                           TASK CONTROLLER
# -----------------------------------------------------------------------

mongo_task_taskCreation:
    path:       tasks/taskcreation
    defaults:   { _controller: MongoBundle:Task:createTask }
    methods: [POST]

mongo_task_taskUpdate:
    path:       tasks/taskupdate
    defaults:   { _controller: MongoBundle:Task:updateTask }
    methods: [PUT]

mongo_task_getTaskInfos:
    path:       tasks/taskinformations/{token}/{taskId}
    defaults:   { _controller: 'MongoBundle:Task:getTaskInfos' }
    methods: [GET]

mongo_task_archiveTask:
    path:       tasks/archivetask
    defaults:   { _controller: 'MongoBundle:Task:archiveTask' }
    methods: [PUT]

mongo_task_taskDelete:
    path:       tasks/taskdelete/{token}/{taskId}
    defaults:   { _controller: MongoBundle:Task:deleteTask }
    methods: [DELETE]

mongo_task_assignUserToTask:
    path:       tasks/assignusertotask
    defaults: { _controller: MongoBundle:Task:assignUserToTask }
    methods: [PUT]

mongo_task_removeUserToTask:
    path:       tasks/removeusertotask/{token}/{taskId}/{userId}
    defaults:   { _controller: 'MongoBundle:Task:removeUserToTask' }
    methods: [DELETE]

mongo_task_tagCreation:
    path:       tasks/tagcreation
    defaults:   { _controller: 'MongoBundle:Task:tagCreation' }
    methods: [POST]

mongo_task_tagUpdate:
    path:       tasks/tagupdate
    defaults:   { _controller: 'MongoBundle:Task:tagUpdate' }
    methods: [PUT]

mongo_task_getTagInfos:
    path:       tasks/taginformations/{token}/{tagId}
    defaults:   { _controller: 'MongoBundle:Task:getTagInfos' }
    methods: [GET]

mongo_task_deleteTag:
    path:       tasks/deletetag/{token}/{tagId}
    defaults:   { _controller: 'MongoBundle:Task:deleteTag' }
    methods: [DELETE]

mongo_task_assignTagToTask:
    path:       tasks/assigntagtotask
    defaults: { _controller: MongoBundle:Task:assignTagToTask }
    methods: [PUT]

mongo_task_removeTagToTask:
    path:       tasks/removetagtotask/{token}/{taskId}/{tagId}
    defaults:   { _controller: 'MongoBundle:Task:removeTagToTask' }
    methods: [DELETE]

mongo_task_getProjectTasks:
    path:       tasks/getprojecttasks/{token}/{projectId}
    defaults:   { _controller: MongoBundle:Task:getProjectTasks }
    methods: [GET]

mongo_task_getProjectTags:
    path:       tasks/getprojecttags/{token}/{projectId}
    defaults:   { _controller: 'MongoBundle:Task:getProjectTags' }
    methods: [GET]



# -----------------------------------------------------------------------
#                           TIMELINE CONTROLLER
# -----------------------------------------------------------------------
mongo_timeline_getTimelines:
    path:       /timeline/gettimelines/{token}/{id}
    defaults:   { _controller: MongoBundle:Timeline:getTimelines }
    methods: [GET]

mongo_timeline_postMessage:
    path:       /timeline/postmessage/{id}
    defaults:   { _controller: MongoBundle:Timeline:postMessage }
    methods: [POST]

mongo_timeline_editMessage:
    path:       /timeline/editmessage/{id}
    defaults:   { _controller: MongoBundle:Timeline:editMessage }
    methods: [PUT]

mongo_timeline_getMessages:
    path:       /timeline/getmessages/{token}/{id}
    defaults:   { _controller: MongoBundle:Timeline:getMessages }
    methods: [GET]

mongo_timeline_getLastMessages:
    path:       /timeline/getlastmessages/{token}/{id}/{offset}/{limit}
    defaults:   { _controller: MongoBundle:Timeline:getLastMessages }
    methods: [GET]

mongo_timeline_getComments:
    path:       /timeline/getcomments/{token}/{id}/{messageId}
    defaults:   { _controller: MongoBundle:Timeline:getComments }
    methods: [GET]

mongo_timeline_archiveMessage:
    path:       /timeline/archivemessage/{token}/{id}/{messageId}
    defaults:   { _controller: MongoBundle:Timeline:archiveMessage }
    methods: [DELETE]





# -----------------------------------------------------------------------
#                           USER CONTROLLER
# -----------------------------------------------------------------------
mongo_user_basicInformations:
    path:       user/basicinformations/{token}
    defaults:   { _controller: MongoBundle:User:basicInformations }
    methods: [GET, PUT]

mongo_user_getUserBasicInformations:
    path:       user/getuserbasicinformations/{token}/{userId}
    defaults:   { _controller: MongoBundle:User:getUserBasicInformations }
    methods: [GET]

mongo_user_getIdByName:
    path:       user/getidbyname/{token}/{firstname}/{lastname}
    defaults:   { _controller: MongoBundle:User:getIdByName }
    methods: [GET]

mongo_user_getIdByEmail:
    path:       user/getidbyemail/{token}/{email}
    defaults:   { _controller: MongoBundle:User:getIdByEmail }
    methods: [GET]

mongo_user_getNextMeetings:
    path:       user/getnextmeetings/{token}
    defaults:   { _controller: MongoBundle:User:getNextMeetings }
    methods: [GET]

mongo_user_getProjects:
    path:       user/getprojects/{token}
    defaults:   { _controller: MongoBundle:User:getProjects }
    methods: [GET]

mongo_user_getAllTasks:
    path:       user/getalltasks/{token}
    defaults:   { _controller: MongoBundle:User:getAllTasks }
    methods: [GET]

mongo_user_getCurrentAndNextTasks:
    path:       user/getcurrentandnexttasks/{token}
    defaults:   { _controller: MongoBundle:User:getCurrentAndNextTasks }
    methods: [GET]

mongo_user_getUserAvatar:
    path:       user/getuseravatar/{token}/{userId}
    defaults:   { _controller: MongoBundle:User:getUserAvatar }
    methods: [GET]

mongo_user_getAllProjectUserAvatar:
    path:       user/getallprojectuseravatar/{token}/{projectId}
    defaults:   { _controller: MongoBundle:User:getAllProjectUserAvatar }
    methods: [GET]



# -----------------------------------------------------------------------
#                      VISUALISING PROJECT CONTROLLER
# -----------------------------------------------------------------------
# visualisingProject_addAction:
#     path:       /VisualisingProject/addAction/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:addAction }
#     requirements:
#         id: \d+
#
# visualisingProject_addActor:
#     path:       /VisualisingProject/addActor/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:addActor }
#     requirements:
#         id: \d+
#
# visualisingProject_addLink:
#     path:       /VisualisingProject/addLink/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:addLink }
#     requirements:
#         id: \d+
#
# visualisingProject_newDiagram:
#     path:       /VisualisingProject/newDiagram/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:newDiagram }
#     requirements:
#         id: \d+
#
# visualisingProject_openDiagram:
#     path:       /VisualisingProject/openDiagram/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:openDiagram }
#     requirements:
#         id: \d+
#
# visualisingProject_invitePerson:
#     path:       /VisualisingProject/invitePerson/{id}
#     defaults:   { _controller: MongoBundle:VisualisingProject:invitePerson }
#     requirements:
#         id: \d+





# -----------------------------------------------------------------------
#                           WHITEBOARD CONTROLLER
# -----------------------------------------------------------------------
mongo_whiteboard_list:
    path:		whiteboard/list/{token}/{projectId}
    defaults:	{ _controller: MongoBundle:Whiteboard:listWhiteboard }
    methods: [GET]

mongo_whiteboard_new:
    path:		whiteboard/new
    defaults:	{ _controller: MongoBundle:Whiteboard:newWhiteboard }
    methods: [POST]

mongo_whiteboard_open:
    path:		whiteboard/open/{token}/{id}
    defaults:	{ _controller: MongoBundle:Whiteboard:openWhiteboard }
    methods: [GET]

mongo_whiteboard_pushDraw:
    path:		whiteboard/pushdraw/{id}
    defaults:	{ _controller: MongoBundle:Whiteboard:pushDraw }
    methods: [PUT]

mongo_whiteboard_pullDraw:
    path:		whiteboard/pulldraw/{id}
    defaults:	{ _controller: MongoBundle:Whiteboard:pullDraw }
    methods: [POST]

mongo_whiteboard_delete:
    path:		whiteboard/delete/{token}/{id}
    defaults:	{ _controller: MongoBundle:Whiteboard:delWhiteboard }
    methods: [DELETE]

mongo_whiteboard_deleteObject:
    path:		whiteboard/deleteobject
    defaults:	{ _controller: MongoBundle:Whiteboard:deleteObject }
    methods: [PUT]
