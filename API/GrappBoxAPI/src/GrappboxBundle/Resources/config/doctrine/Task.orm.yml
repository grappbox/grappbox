GrappboxBundle\Entity\Task:
    type: entity
    repositoryClass: GrappboxBundle\Entity\TaskRepository
    table: tasks
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    fields:
        title:
            type: string
            length: 255
        description:
            type: text
            nullable: TRUE
        color:
            type: string
            length: 255
            nullable: TRUE
        dueDate:
            type: datetime
            column: due_date
            nullable: TRUE
        startedAt:
            type: datetime
            column: started_at
            nullable: TRUE
        finishedAt:
            type: datetime
            column: finished_at
            nullable: TRUE
        createdAt:
            type: datetime
            column: created_at
        deletedAt:
            type: datetime
            column: deleted_at
            nullable: TRUE
        isMilestone:
            type: boolean
            column: is_milestone
        isContainer:
            type: boolean
            column: is_container
        advance:
          type: integer
          nullable: FALSE
    manyToOne:
        projects:
          targetEntity: Project
          inversedBy: tasks
          joinColumn:
            name: project_id
            referencedColumnName: id
        creator_user:
          targetEntity: User
          inveredBy: task_creator
          joinColumn:
            name: creator_id
            referencedColumnName: id
        container:
          targetEntity: Task
          inversedBy: tasks_container
    manyToMany:
        tags:
          targetEntity: Tag
          inversedBy: tasks
          joinTable:
            name: task_tags
            joinColumns:
              task_id:
                referencedColumnName: id
            inverseJoinColumns:
              tag_id:
                referencedColumnName: id
    oneToMany:
        ressources:
          targetEntity: Ressources
          mappedBy: task
          cascade: [remove]
        dependence:
          targetEntity: Dependencies
          mappedBy: task
          cascade: [remove, refresh ]
        task_depended:
          targetEntity: Dependencies
          mappedBy: dependence_task
          cascade: [remove, refresh ]
        tasks_container:
          targetEntity: Task
          mappedBy: container
    lifecycleCallbacks: {  }
