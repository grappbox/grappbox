<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_passwordEncrypt' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::passwordEncryptAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/user/passwordencrypt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_accountAdministration_preorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\AccountAdministrationController::preorderAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/account/preorder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_accountAdministration_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\AccountAdministrationController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/account/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_accountAdministration_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\AccountAdministrationController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/account/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_accountAdministration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\AccountAdministrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/account/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_postTicket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::postTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_editTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::editTicketAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_closeTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::closeTicketAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket/close',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_reopenTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::reopenTicketAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket/reopen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_deleteTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::deleteTicketAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getTicketAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getTickets' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getTicketsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tickets/opened',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getClosedTickets' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getClosedTicketsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tickets/closed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getLastTickets' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getLastTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tickets/opened',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getLastClosedTickets' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getLastClosedTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tickets/closed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getTicketsByUser' => array (  0 =>   array (    0 => 'id',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getTicketsByUserAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tickets/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_setParticipants' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::setParticipantsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getComments' => array (  0 =>   array (    0 => 'ticketId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'ticketId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'ticketId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_postComment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::postCommentAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_editComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::editCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_deleteComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::deleteCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_tagCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::tagCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_tagUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::tagUpdateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getTagInfos' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getTagInfosAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_deleteTag' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::deleteTagAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_assignTag' => array (  0 =>   array (    0 => 'bugId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::assignTagAction',    '_format' => 'json',  ),  2 =>   array (    'bugId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'bugId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag/assign',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_removeTag' => array (  0 =>   array (    0 => 'bugId',    1 => 'tagId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::removeTagAction',    '_format' => 'json',  ),  2 =>   array (    'bugId' => '\\d+',    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'bugId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/tag/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getProjectTags' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getProjectTagsAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/project/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getTicketsByState' => array (  0 =>   array (    0 => 'id',    1 => 'state',    2 => 'offset',    3 => 'limit',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getTicketsByStateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'state' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'state',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/getticketsbystate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_bugtracker_getStates' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\BugtrackerController::getStatesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/bugtracker/getstates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_streamOpenAction' => array (  0 =>   array (    0 => 'idProject',    1 => 'safePassword',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::openStreamAction',    'safePassword' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'safePassword',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/cloud/stream',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_streamCloseAction' => array (  0 =>   array (    0 => 'projectId',    1 => 'streamId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::closeStreamAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'streamId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/cloud/stream',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_sendFile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::sendFileAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_getList' => array (  0 =>   array (    0 => 'idProject',    1 => 'path',    2 => 'password',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::getListAction',    'password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/cloud/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_getFile' => array (  0 =>   array (    0 => 'cloudPath',    1 => 'idProject',    2 => 'passwordSafe',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::getFileAction',    'passwordSafe' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'passwordSafe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cloudPath',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_getFile_secured' => array (  0 =>   array (    0 => 'cloudPath',    1 => 'idProject',    2 => 'password',    3 => 'passwordSafe',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::getFileSecuredAction',    'passwordSafe' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'passwordSafe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cloudPath',    ),    4 =>     array (      0 => 'text',      1 => '/mongo/cloud/filesecured',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_setSafePass' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::setSafePassAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/cloud/safepass',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_delete' => array (  0 =>   array (    0 => 'projectId',    1 => 'path',    2 => 'password',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::delAction',    'password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_createDir' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::createDirAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/cloud/createdir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_cloud_delete_secured' => array (  0 =>   array (    0 => 'projectId',    1 => 'path',    2 => 'password',    3 => 'safe_password',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\CloudController::delSecuredAction',    'safe_password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'safe_password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    4 =>     array (      0 => 'text',      1 => '/mongo/cloud/filesecured',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_dashboard_getTeamOccupation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\DashboardController::getTeamOccupationAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/dashboard/occupation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_dashboard_getNextMeetings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\DashboardController::getNextMeetingsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/dashboard/meetings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_dashboard_getProjectsGlobalProgress' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\DashboardController::getProjectsGlobalProgressAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/dashboard/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_event_postEvent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\EventController::postEventAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_event_editEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\EventController::editEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_event_delEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\EventController::delEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_event_getEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\EventController::getEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_event_setParticipants' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\EventController::setParticipantsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/event/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_notification_registerDevice' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\NotificationController::registerDeviceAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/notification/device',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_notification_getUserDevices' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\NotificationController::getUserDevicesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/notification/devices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_notification_getNotifications' => array (  0 =>   array (    0 => 'read',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\NotificationController::getNotificationsAction',    '_format' => 'json',  ),  2 =>   array (    'read' => '[a-zA-Z0-9]+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[a-zA-Z0-9]+',      3 => 'read',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_notification_setNotificationToRead' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\NotificationController::setNotificationToReadAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/notification/setnotificationtoread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_planning_getDayPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\PlanningController::getDayPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/planning/day',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_planning_getWeekPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\PlanningController::getWeekPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/planning/week',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_planning_getMonthPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\PlanningController::getMonthPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/planning/month',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_projectCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::projectCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_updateInformations' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::updateInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_getInformations' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::getInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_delProject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::delProjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_retrieveProject' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::retrieveProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/retrieve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_generateCustomerAccess' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::generateCustomerAccessAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/project/customeraccess',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_getCustomerAccessByProject' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::getCustomerAccessByProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/customeraccesses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_delCustomerAccess' => array (  0 =>   array (    0 => 'projectId',    1 => 'customerAccessId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::delCustomerAccessAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'customerAccessId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'customerAccessId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/project/customeraccess',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_addUserToProject' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::addUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_removeUserConnected' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::removeUserConnectedAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/userconnected',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_removeUserToProject' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::removeUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_getUserToProject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::getUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_changeProjectColor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::changeProjectColorAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/color',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_resetProjectColor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::resetProjectColorAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/color',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_project_getProjectLogo' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\ProjectController::getProjectLogoAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/project/logo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_addProjectRoles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:addProjectRoles',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_delProjectRoles' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:delProjectRoles',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_putProjectRoles' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:updateProjectRoles',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_getProjectRoles' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:getProjectRoles',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_assignPersonToRole' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:assignPersonToRole',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_updatePersonRole' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:updatePersonRole',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_getUserRoles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:getUserRoles',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/roles/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_delPersonRole' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',    2 => 'roleId',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:delPersonRole',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',    'roleId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'roleId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_getRoleByProjectAndUser' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:getRoleByProjectAndUser',    'userId' => 0,    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/roles/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_getUsersForRole' => array (  0 =>   array (    0 => 'roleId',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:getUsersForRole',    '_format' => 'json',  ),  2 =>   array (    'roleId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'roleId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/role/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_role_getUserRoleForPart' => array (  0 =>   array (    0 => 'userId',    1 => 'projectId',    2 => 'part',  ),  1 =>   array (    '_controller' => 'MongoBundle:Role:getUserRoleForPart',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'part',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/role/user/part',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_stat_getAllStat' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\StatisticController::getAllStatAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/statistics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_stat_getStat' => array (  0 =>   array (    0 => 'projectId',    1 => 'statName',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\StatisticController::getStatAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'statName',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/statistic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_stat_weeklyUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\StatisticController::weeklyUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/statistics/update/weekly',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_stat_dailyUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\StatisticController::dailyUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/statistics/update/daily',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_taskCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::createTaskAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_taskUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::updateTaskAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_getTaskInfos' => array (  0 =>   array (    0 => 'taskId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::getTaskInfosAction',    '_format' => 'json',  ),  2 =>   array (    'taskId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'taskId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_archiveTask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::archiveTaskAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/task/archive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_taskDelete' => array (  0 =>   array (    0 => 'taskId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::deleteTaskAction',    '_format' => 'json',  ),  2 =>   array (    'taskId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'taskId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_tagCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::tagCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_tagUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::tagUpdateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_getTagInfos' => array (  0 =>   array (    0 => 'tagId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::getTagInfosAction',    '_format' => 'json',  ),  2 =>   array (    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_deleteTag' => array (  0 =>   array (    0 => 'tagId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::deleteTagAction',    '_format' => 'json',  ),  2 =>   array (    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_getProjectTasks' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::getProjectTasksAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/tasks/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_task_getProjectTags' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TaskController::getProjectTagsAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/tasks/tags/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_getTimelines' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::getTimelinesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timelines',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_postMessage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::postMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_editMessage' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::editMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_archiveMessage' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::archiveMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_getMessages' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::getMessagesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timeline/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_getLastMessages' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::getLastMessagesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/mongo/timeline/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_getComments' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::getCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/timeline/message/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_postComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::postCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_editComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::editCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_timeline_deleteComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\TimelineController::deleteCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_basicInformations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::basicInformationsAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_getUserBasicInformations' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::getUserBasicInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_getIdByName' => array (  0 =>   array (    0 => 'firstname',    1 => 'lastname',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::getIdByNameAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lastname',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'firstname',    ),    2 =>     array (      0 => 'text',      1 => '/mongo/user/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_getIdByEmail' => array (  0 =>   array (    0 => 'email',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::getIdByEmailAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'email',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/user/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_getUserAvatar' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::getUserAvatarAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/user/avatar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_user_getAllProjectUserAvatar' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\UserController::getAllProjectUserAvatarAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/user/project/avatars',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_list' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::listWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::newWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mongo/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_open' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::openWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_close' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::closeWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_pushDraw' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::pushDrawAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard/draw',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_pullDraw' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::pullDrawAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard/draw',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::delWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mongo_whiteboard_deleteObject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MongoBundle\\Controller\\WhiteboardController::deleteObjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/mongo/whiteboard/object',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_passwordEncrypt' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::passwordEncryptAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/passwordencrypt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accountAdministration_preorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\AccountAdministrationController::preorderAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/preorder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accountAdministration_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\AccountAdministrationController::loginAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accountAdministration_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\AccountAdministrationController::logoutAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'accountAdministration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\AccountAdministrationController::registerAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_postTicket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::postTicketAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_editTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::editTicketAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_closeTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::closeTicketAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/ticket/close',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_reopenTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::reopenTicketAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/ticket/reopen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_deleteTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::deleteTicketAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getTicket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getTicketAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getTickets' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tickets/opened',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getClosedTickets' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getClosedTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tickets/closed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getLastTickets' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getLastTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/bugtracker/tickets/opened',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getLastClosedTickets' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getLastClosedTicketsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/bugtracker/tickets/closed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getTicketsByUser' => array (  0 =>   array (    0 => 'id',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getTicketsByUserAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/bugtracker/tickets/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_setParticipants' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::setParticipantsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getComments' => array (  0 =>   array (    0 => 'ticketId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'ticketId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'ticketId',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_postComment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::postCommentAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_editComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::editCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_deleteComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::deleteCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_tagCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::tagCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_tagUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::tagUpdateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getTagInfos' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getTagInfosAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_deleteTag' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::deleteTagAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_assignTag' => array (  0 =>   array (    0 => 'bugId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::assignTagAction',    '_format' => 'json',  ),  2 =>   array (    'bugId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'bugId',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/tag/assign',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_removeTag' => array (  0 =>   array (    0 => 'bugId',    1 => 'tagId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::removeTagAction',    '_format' => 'json',  ),  2 =>   array (    'bugId' => '\\d+',    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'bugId',    ),    2 =>     array (      0 => 'text',      1 => '/bugtracker/tag/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getProjectTags' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getProjectTagsAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/bugtracker/project/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getTicketsByState' => array (  0 =>   array (    0 => 'id',    1 => 'state',    2 => 'offset',    3 => 'limit',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getTicketsByStateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'state' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'state',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/bugtracker/getticketsbystate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bugtracker_getStates' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\BugtrackerController::getStatesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bugtracker/getstates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_streamOpenAction' => array (  0 =>   array (    0 => 'idProject',    1 => 'safePassword',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::openStreamAction',    'safePassword' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'safePassword',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    2 =>     array (      0 => 'text',      1 => '/cloud/stream',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_streamCloseAction' => array (  0 =>   array (    0 => 'projectId',    1 => 'streamId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::closeStreamAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'streamId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/cloud/stream',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_sendFile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::sendFileAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_getList' => array (  0 =>   array (    0 => 'idProject',    1 => 'path',    2 => 'password',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::getListAction',    'password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    3 =>     array (      0 => 'text',      1 => '/cloud/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_getFile' => array (  0 =>   array (    0 => 'cloudPath',    1 => 'idProject',    2 => 'passwordSafe',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::getFileAction',    'passwordSafe' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'passwordSafe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cloudPath',    ),    3 =>     array (      0 => 'text',      1 => '/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_getFile_secured' => array (  0 =>   array (    0 => 'cloudPath',    1 => 'idProject',    2 => 'password',    3 => 'passwordSafe',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::getFileSecuredAction',    'passwordSafe' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'passwordSafe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProject',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cloudPath',    ),    4 =>     array (      0 => 'text',      1 => '/cloud/filesecured',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_setSafePass' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::setSafePassAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cloud/safepass',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_delete' => array (  0 =>   array (    0 => 'projectId',    1 => 'path',    2 => 'password',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::delAction',    'password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    3 =>     array (      0 => 'text',      1 => '/cloud/file',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_createDir' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::createDirAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cloud/createdir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cloud_delete_secured' => array (  0 =>   array (    0 => 'projectId',    1 => 'path',    2 => 'password',    3 => 'safe_password',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\CloudController::delSecuredAction',    'safe_password' => NULL,    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'safe_password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'path',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectId',    ),    4 =>     array (      0 => 'text',      1 => '/cloud/filesecured',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard_getTeamOccupation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\DashboardController::getTeamOccupationAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/occupation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard_getNextMeetings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\DashboardController::getNextMeetingsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/meetings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard_getProjectsGlobalProgress' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\DashboardController::getProjectsGlobalProgressAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_postEvent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\EventController::postEventAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_editEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\EventController::editEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_delEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\EventController::delEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_getEvent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\EventController::getEventAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_setParticipants' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\EventController::setParticipantsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_registerDevice' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\NotificationController::registerDeviceAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notification/device',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_getUserDevices' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\NotificationController::getUserDevicesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notification/devices',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_getNotifications' => array (  0 =>   array (    0 => 'read',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\NotificationController::getNotificationsAction',    '_format' => 'json',  ),  2 =>   array (    'read' => '[a-zA-Z0-9]+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[a-zA-Z0-9]+',      3 => 'read',    ),    3 =>     array (      0 => 'text',      1 => '/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_setNotificationToRead' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\NotificationController::setNotificationToReadAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/notification/setnotificationtoread',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'planning_getDayPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\PlanningController::getDayPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/planning/day',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'planning_getWeekPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\PlanningController::getWeekPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/planning/week',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'planning_getMonthPlanning' => array (  0 =>   array (    0 => 'date',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\PlanningController::getMonthPlanningAction',    '_format' => 'json',  ),  2 =>   array (    'date' => '\\d+-\\d+-\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+-\\d+-\\d+',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/planning/month',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_projectCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::projectCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_updateInformations' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::updateInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_getInformations' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::getInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_delProject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::delProjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_retrieveProject' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::retrieveProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/project/retrieve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_generateCustomerAccess' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::generateCustomerAccessAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project/customeraccess',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_getCustomerAccessByProject' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::getCustomerAccessByProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/project/customeraccesses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_delCustomerAccess' => array (  0 =>   array (    0 => 'projectId',    1 => 'customerAccessId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::delCustomerAccessAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'customerAccessId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'customerAccessId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/project/customeraccess',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_addUserToProject' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::addUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_removeUserConnected' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::removeUserConnectedAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/project/userconnected',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_removeUserToProject' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::removeUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_getUserToProject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::getUserToProjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_changeProjectColor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::changeProjectColorAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/color',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_resetProjectColor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::resetProjectColorAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/color',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_getProjectLogo' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\ProjectController::getProjectLogoAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/logo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_addProjectRoles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::addProjectRolesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_delProjectRoles' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::delProjectRolesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_putProjectRoles' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::updateProjectRolesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_getProjectRoles' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::getProjectRolesAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_assignPersonToRole' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::assignPersonToRoleAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_updatePersonRole' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::updatePersonRoleAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_getUserRoles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::getUserRolesAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_delPersonRole' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',    2 => 'roleId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::delPersonRoleAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',    'roleId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'roleId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    3 =>     array (      0 => 'text',      1 => '/role/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_getRoleByProjectAndUser' => array (  0 =>   array (    0 => 'projectId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::getRoleByProjectAndUserAction',    'userId' => 0,    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/roles/project/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_getUsersForRole' => array (  0 =>   array (    0 => 'roleId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::getUsersForRoleAction',    '_format' => 'json',  ),  2 =>   array (    'roleId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'roleId',    ),    1 =>     array (      0 => 'text',      1 => '/role/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'role_getUserRoleForPart' => array (  0 =>   array (    0 => 'userId',    1 => 'projectId',    2 => 'part',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\RoleController::getUserRoleForPartAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'part',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    3 =>     array (      0 => 'text',      1 => '/role/user/part',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_getAllStat' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\StatisticController::getAllStatAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/statistics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_getStat' => array (  0 =>   array (    0 => 'projectId',    1 => 'statName',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\StatisticController::getStatAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'statName',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    2 =>     array (      0 => 'text',      1 => '/statistic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_weeklyUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\StatisticController::weeklyUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/statistics/update/weekly',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_dailyUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\StatisticController::dailyUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/statistics/update/daily',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stat_customUpdate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\StatisticController::manuallyUpdateStatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/statistics/update/custom',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_taskCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::createTaskAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_taskUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::updateTaskAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_getTaskInfos' => array (  0 =>   array (    0 => 'taskId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::getTaskInfosAction',    '_format' => 'json',  ),  2 =>   array (    'taskId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'taskId',    ),    1 =>     array (      0 => 'text',      1 => '/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_archiveTask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::archiveTaskAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/task/archive',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_taskDelete' => array (  0 =>   array (    0 => 'taskId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::deleteTaskAction',    '_format' => 'json',  ),  2 =>   array (    'taskId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'taskId',    ),    1 =>     array (      0 => 'text',      1 => '/task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_tagCreation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::tagCreationAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_tagUpdate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::tagUpdateAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_getTagInfos' => array (  0 =>   array (    0 => 'tagId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::getTagInfosAction',    '_format' => 'json',  ),  2 =>   array (    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'text',      1 => '/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_deleteTag' => array (  0 =>   array (    0 => 'tagId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::deleteTagAction',    '_format' => 'json',  ),  2 =>   array (    'tagId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tagId',    ),    1 =>     array (      0 => 'text',      1 => '/tasks/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_getProjectTasks' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::getProjectTasksAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/tasks/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'task_getProjectTags' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TaskController::getProjectTagsAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/tasks/tags/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_getTimelines' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::getTimelinesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timelines',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_postMessage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::postMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_editMessage' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::editMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_archiveMessage' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::archiveMessageAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/timeline/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_getMessages' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::getMessagesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timeline/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_getLastMessages' => array (  0 =>   array (    0 => 'id',    1 => 'offset',    2 => 'limit',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::getLastMessagesAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'offset' => '\\d+',    'limit' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'limit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'offset',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/timeline/messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_getComments' => array (  0 =>   array (    0 => 'id',    1 => 'messageId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::getCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'messageId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'messageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/timeline/message/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_postComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::postCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_editComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::editCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'timeline_deleteComment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\TimelineController::deleteCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/timeline/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_basicInformations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::basicInformationsAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_getUserBasicInformations' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::getUserBasicInformationsAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_getIdByName' => array (  0 =>   array (    0 => 'firstname',    1 => 'lastname',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::getIdByNameAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lastname',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'firstname',    ),    2 =>     array (      0 => 'text',      1 => '/user/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_getIdByEmail' => array (  0 =>   array (    0 => 'email',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::getIdByEmailAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'email',    ),    1 =>     array (      0 => 'text',      1 => '/user/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_getUserAvatar' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::getUserAvatarAction',    '_format' => 'json',  ),  2 =>   array (    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/user/avatar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_getAllProjectUserAvatar' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\UserController::getAllProjectUserAvatarAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/user/project/avatars',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_list' => array (  0 =>   array (    0 => 'projectId',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::listWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'projectId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'projectId',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::newWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_open' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::openWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_close' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::closeWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_pushDraw' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::pushDrawAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard/draw',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_pullDraw' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::pullDrawAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard/draw',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::delWhiteboardAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'whiteboard_deleteObject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SQLBundle\\Controller\\WhiteboardController::deleteObjectAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/whiteboard/object',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
